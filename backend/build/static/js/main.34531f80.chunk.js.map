{"version":3,"sources":["components/LoadingComponent.js","shared/BaseUrl.js","components/MenuComponent.js","components/FooterComponent.js","components/HeaderComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/DishdetailComponent .js","components/AboutComponent.js","redux/actionCreator.js","redux/actionTypes.js","components/MainComponent.js","redux/comments.js","redux/dishes.js","redux/leaders.js","redux/promotions.js","redux/forms.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","to","id","key","width","src","image","alt","name","Menu","props","menu","dishes","map","isLoading","errMess","active","Footer","href","Header","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Fragment","dark","expand","height","isOpen","navbar","outline","toggle","onSubmit","htmlFor","type","innerRef","input","check","color","Component","RenderCard","item","in","transformProps","exitTransform","designation","description","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","console","log","JSON","stringify","resetFeedbackForm","role","model","md","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","RenderDish","top","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","isFormOpen","toggleForm","rating","DishDetail","RenderLeader","tag","left","middle","object","body","heading","About","leaders","title","list","addComments","payload","commentsFailed","errmess","dishesFailed","addDishes","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","addFeedback","feedback","dispatch","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","timeout","classNames","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","actions","reset","newFeedback","Comments","action","concat","Dishes","Leaders","Promotions","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.34531f80.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className='col-12'>\r\n        <span className='fa fa-spinner fa-pulse fa-3x fa-fw text-primary'></span>\r\n        <p>Loading....</p>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Loading;","//export const baseUrl = 'http://localhost:3001/';\r\n\r\n export const baseUrl = 'https://fake-server-myapp.herokuapp.com/'","import React from 'react'\r\nimport {\r\n    Card, CardImg, CardImgOverlay,\r\n    CardTitle, Breadcrumb, BreadcrumbItem\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport  Loading  from './LoadingComponent';\r\n\r\nimport { baseUrl } from '../shared/BaseUrl';\r\n\r\nfunction RenderMenuItem({ dish, onClick }) {\r\n\r\n    return (\r\n        <Link to={`/menu/${dish.id}`}>\r\n            <Card key={dish.id}>\r\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Card>\r\n        </Link>\r\n\r\n    )\r\n\r\n}\r\n \r\nconst Menu = (props) => {\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        );\r\n    });\r\n    if(props.dishes.isLoading){\r\n        return(\r\n            <div className='container'>\r\n               <div className='row'>\r\n                  <Loading />\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if(props.dishes.errMess){\r\n        return(\r\n            <div className='container'>\r\n               <div className='row'>\r\n                  <h4>{props.dishes.errMess}</h4>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem> <Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Menu</BreadcrumbItem>   \r\n                </Breadcrumb>\r\n    \r\n                <div className=\"col-12\">\r\n                    <h3>Menu</h3>\r\n                    <hr />\r\n                </div>       \r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );   \r\n}\r\n\r\nexport default Menu;\r\n\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom' \r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react'\r\nimport {\r\n    Navbar, NavbarBrand, Nav, NavbarToggler, Collapse,\r\n    Jumbotron,\r\n    NavItem, Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Label, Input\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom'\r\nimport '../App.css';\r\n\r\nexport default class Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        }\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen,\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen,\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Restaurant Con Fusion\" />\r\n                        </NavbarBrand>\r\n\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\"><span className='fa fa-home fa-lg'>Home</span></NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\"><span className='fa fa-info fa-lg'>About Us</span></NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\"><span className='fa fa-menu fa-lg'>Menu</span></NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\"><span className='fa fa-address-card fa-lg'>Contacts</span></NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className='fa fa-sign-in fa-lg'>Login</span></Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n// retrieve data from input in react used \"ref\", in reactstrap innerRef={(input) => this.username = input}","import React from 'react';\r\nimport {\r\n  Card, CardImg, CardText, CardBody,\r\n  CardTitle, CardSubtitle\r\n} from 'reactstrap';\r\nimport { baseUrl } from '../shared/BaseUrl';\r\nimport Loading from './LoadingComponent';\r\n\r\nimport { FadeTransform } from 'react-animation-components'\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n  if (isLoading) {\r\n    return (<Loading />);\r\n  }\r\n  else if (errMess) {\r\n    return (<h4>{errMess}</h4>);\r\n  }\r\n  else\r\n    return (\r\n      <FadeTransform in \r\n         transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)'}}\r\n      >\r\n        <Card>\r\n          <CardImg src={baseUrl + item.image} alt={item.name} />\r\n          <CardBody>\r\n            <CardTitle>{item.name}</CardTitle>\r\n            {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n            <CardText>{item.description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </FadeTransform>\r\n    );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row align-items-start\">\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard item={props.dish}\r\n            isLoading={props.dishesLoading}\r\n            errMess={props.dishesErrMess}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard item={props.promotion}\r\n            isLoading={props.promoLoading}\r\n            errMess={props.promoErrMess}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard item={props.leader} \r\n            isLoading={props.leaderLoading}\r\n            errMess={props.leaderErrMess}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors} from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n       \r\n\r\nclass Contact extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n     \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleSubmit(values){\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree , values.contactType, values.message);\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        // event.preventDefault();\r\n        this.props.resetFeedbackForm();\r\n    }\r\n   \r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"https://skype.com\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                   \r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                        <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" \r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 characters or less'\r\n                                            }}\r\n                                        />                                          \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\" \r\n                                            messages={{\r\n                                                required: 'Required',\r\n                                                minLength: 'Must be greater than 2 characters',\r\n                                                maxLength: 'Must be 15 characters or less'\r\n                                            }}\r\n                                    />     \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\" \r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        \r\n                    </div>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport {\r\n    Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem,\r\n    Button, Modal, ModalHeader, ModalBody, Label, Row, Col\r\n} from 'reactstrap'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Control, LocalForm, Field, Errors } from 'react-redux-form';\r\n\r\nimport Loading from './LoadingComponent'\r\nimport { baseUrl } from '../shared/BaseUrl';\r\n\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderDish({ dish }) {\r\n\r\n    if (dish != null)\r\n        return (\r\n            <div>\r\n                <FadeTransform in\r\n                    transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)' }}\r\n                >\r\n                    <Card key={dish.id}>\r\n                        <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n\r\n            </div>\r\n        );\r\n    else\r\n        return (\r\n            <div></div>\r\n        );\r\n}\r\n\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n    return (<>\r\n        <h4>Comments</h4>\r\n        <Stagger in>\r\n            {comments.map((comment) => {\r\n                return (\r\n                    <Fade in>\r\n                        <li className='list-unstyled' key={comment.id} >{comment.comment}</li>\r\n                        <p>{comment.author} {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\r\n                    </Fade>\r\n                );\r\n            })}\r\n            <CommentForm dishId={dishId} postComment={postComment} />\r\n        </Stagger>\r\n\r\n    </>)\r\n}\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isFormOpen: false\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n    }\r\n\r\n    toggleForm() {\r\n        this.setState({ isFormOpen: !this.state.isFormOpen })\r\n    }\r\n\r\n    //react-redux-form\r\n    handleSubmit(values) {\r\n\r\n        this.toggleForm();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n            <Button outline onClick={this.toggleForm} ><span className='fa fa-pencil'>Submit Comment</span></Button>\r\n\r\n            <Modal toggle={this.toggleForm} isOpen={this.state.isFormOpen}>\r\n                <ModalHeader toggle={this.toggleForm}>Submit Comment</ModalHeader>\r\n                <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"rating\">Rating</Label>\r\n                            <Field model=\".rating\" id=\"rating\" name=\"rating\" className=\"form-control auto\">\r\n                                <select>\r\n                                    <option value=\"1\">1</option>\r\n                                    <option value=\"2\">2</option>\r\n                                    <option value=\"3\">3</option>\r\n                                    <option value=\"4\">4</option>\r\n                                    <option value=\"5\">5</option>\r\n                                </select>\r\n                            </Field>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"author\">Your Name</Label>\r\n                            <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your Name\" className=\"form-control\"\r\n                                validators={{\r\n                                    required,\r\n                                    minLength: minLength(3),\r\n                                    maxLength: maxLength(15)\r\n                                }}\r\n                            />\r\n                            <Errors className=\"text-danger\" model=\".name\" show=\"touched\"\r\n                                messages={{\r\n                                    required: 'Required',\r\n                                    minLength: 'Must be greater than 2 characters',\r\n                                    maxLength: 'Must be 15 characters or less'\r\n                                }} />\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"comment\">comment</Label>\r\n                            <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                rows=\"6\" className='form-control'\r\n                            />\r\n                        </Row>\r\n\r\n                        <Row className=\"form-group\">\r\n                            <Col md={{ size: 10 }}>\r\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </LocalForm>\r\n                </ModalBody>\r\n            </Modal>\r\n        </>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nconst DishDetail = (props) => {\r\n    //const { dish, comments } = props;\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null)\r\n\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-1\"> <RenderDish dish={props.dish} /></div>\r\n                    <div className=\"col-12 col-md-5 m-1\">\r\n                        <RenderComments comments={props.comments}\r\n                            postComment={props.postComment}\r\n                            dishId={props.dish.id}\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    else {\r\n        return <div></div>\r\n    }\r\n}\r\nexport default DishDetail;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { FadeTransform, Stagger, Fade } from 'react-animation-components';\r\nimport Loading from './LoadingComponent';\r\nimport { baseUrl } from '../shared/BaseUrl';\r\n\r\nconst RenderLeader = ({ leader }) => {\r\n    return (\r\n        <div key={leader.id} className=\"col-12 mt-5\">\r\n            <Media tag=\"li\">\r\n                <FadeTransform in\r\n                    transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)' }}\r\n                >\r\n                    <Media left middle>\r\n                        <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                    </Media>\r\n                </FadeTransform>\r\n                <Stagger in>\r\n                    <Media body className=\"ml-5\">\r\n                        <Fade in>\r\n                            <Media heading>{leader.name}</Media>                        \r\n                              <p>{leader.designation}</p>\r\n                            <p>{leader.description}</p>\r\n                        </Fade>\r\n                    </Media>\r\n                </Stagger>          \r\n            </Media>         \r\n        </div >\r\n    )\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n        return (\r\n            <RenderLeader leader={leader} />\r\n        );\r\n    });\r\n\r\n    if (props.leaders.isLoading) {\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    else if (props.leaders.errMess) {\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <h4>{props.leaders.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>About Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12 col-md-6\">\r\n                        <h2>Our History</h2>\r\n                        <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                        <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5\">\r\n                        <Card>\r\n                            <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                            <CardBody>\r\n                                <dl className=\"row p-1\">\r\n                                    <dt className=\"col-6\">Started</dt>\r\n                                    <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                    <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                    <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                    <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                    <dd className=\"col-6\">$1,250,375</dd>\r\n                                    <dt className=\"col-6\">Employees</dt>\r\n                                    <dd className=\"col-6\">40</dd>\r\n                                </dl>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <Card>\r\n                            <CardBody className=\"bg-faded\">\r\n                                <blockquote className=\"blockquote\">\r\n                                    <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                        I'm not hungry enough to eat six.</p>\r\n                                    <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                        <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                            P. Pepe, Diversion Books, 2014</cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Corporate Leadership</h2>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n\r\n                        <Media list>\r\n                            {leaders}\r\n                        </Media>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default About;  ","import * as ActionTypes from './actionTypes';\r\n\r\nimport { baseUrl } from '../shared/BaseUrl';\r\n\r\n//action fn, typen payload object n pass arg if neccesary\r\n\r\n//COMMENT\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\n//THUNK\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(newComment),\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        }, error => {\r\n            throw error;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: ' + error.message); });\r\n}\r\n\r\n\r\n//Thunk\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        }, error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n})\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n})\r\n\r\n\r\n\r\n//DISHES\r\n//redux thunk fn, in fn has fn n can inject in this case dispatch(), dispatch fn receive action fn\r\n//used fetch\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        }, error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n};\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING,\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\n\r\n//PROMOS\r\n//thunk\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        }, error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING,\r\n})\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n})\r\n\r\n//LEADERS\r\n//thunk\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        }, error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\n//action fn\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING,\r\n})\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n})\r\n\r\n\r\n\r\n//new POST FEEDBACK (), thunk\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree , contactType, message) => (dispatch) => {\r\n    const newFeedback = {\r\n        firstname : firstname,\r\n        lastname : lastname ,\r\n        telnum : telnum,\r\n        email : email,\r\n        agree : agree ,     \r\n        contactType : contactType,\r\n        message : message,\r\n    }\r\n    newFeedback.date = new Date().toISOString();\r\n    \r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(newFeedback),\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        }, error => {\r\n            throw error;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addFeedback(response)))\r\n        .catch(error => { console.log('post feedback', error.message); alert('Your Feedback could not be posted\\nError: ' + error.message); });\r\n}\r\n\r\nexport const addFeedback = (feedback) => (dispatch) => ({\r\n    type: ActionTypes.POST_FEEDBACK,\r\n    payload: feedback\r\n})\r\n","export const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\nexport const DISHES_LOADING = \"DISHES_LOADING\";\r\nexport const DISHES_FAILED = \"DISHES_FAILED\";\r\nexport const ADD_DISHES = \"ADD_DISHES\";\r\n\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n\r\nexport const POST_FEEDBACK = 'POST_FEEDBACK';","import React, { Component } from 'react'\r\nimport Menu from './MenuComponent'\r\nimport Footer from './FooterComponent';\r\nimport Header from './HeaderComponent';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent ';\r\nimport About from './AboutComponent';\r\n\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { postFeedback, postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/actionCreator';\r\n\r\nimport { actions } from 'react-redux-form';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\n//state from redux become available as \"props\" in our components by connectting used connect()\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dishes: state.dishes,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders,\r\n    comments: state.comments\r\n  }\r\n};\r\n\r\n//action become availabe as props , key : ()=> dispatch( actionfn())\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => { dispatch(fetchDishes()) },\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n  fetchComments: () => { dispatch(fetchComments()) },\r\n  fetchPromos: () => { dispatch(fetchPromos()) },\r\n\r\n  fetchLeaders: ()=> { dispatch(fetchLeaders())},\r\n  postFeedback: (firstname, lastname, telnum, email, agree , contactType, message)=> dispatch(postFeedback(firstname, \r\n    lastname, telnum, email, agree , contactType, message))\r\n\r\n  //feedback is key in configureStore for form\r\n});\r\n\r\n//Main component responsible for all state\r\nclass Main extends Component {\r\n\r\n  //right after commponent just mount we call fetchDishes()thunk fn\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return (<Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n        dishesLoading={this.props.dishes.isLoading}\r\n        dishesErrMess={this.props.dishes.errMess}\r\n        promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n        promoLoading={this.props.promotions.isLoading}\r\n        promoErrMess={this.props.promotions.errMess}\r\n        leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]} \r\n        leaderLoading={this.props.leaders.isLoading}\r\n        leaderErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({ match }) => {\r\n      return (\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition  key={this.props.location.key} timeout={300} classNames=\"page\">\r\n            <Switch location={this.props.location}>\r\n              <Route path='/home' component={HomePage} />\r\n              <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders}/>} />\r\n              <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path='/menu/:dishId' component={DishWithId} />\r\n              <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm}\r\n                postFeedback={this.props.postFeedback} />} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n/***EXPLAINATION we extract comments ARRAY that match with Dish ID, NOT comment ID, 10 is base ten*/\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './actionTypes';\r\n\r\n//comment reducer \r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments: []\r\n}, action) => {\r\n    switch (action.type) {\r\n\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return { ...state, errMess: null, comments: action.payload}; \r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return { ...state, errMess: action.payload }; \r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            console.log(\"Comment: \", comment);\r\n\r\n            return {...state, comments : state.comments.concat(comment)};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};\r\n//reducer In other words, (state, action) => newState , fn take current state n action n return new state","\r\nimport * as ActionTypes from './actionTypes';\r\n\r\n//dishes reducer , fn(state, action)=> newState\r\nexport const Dishes = ( state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes: []\r\n}, action)=>{\r\n    switch(action.type){\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, dishes: []};\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, dishes:[]};    \r\n        default:\r\n            return state\r\n    }\r\n} \r\n\r\n//the state of dishes are isLoading, errmess, n dishes[]","import * as ActionTypes from './actionTypes';\r\n\r\n//leader reducer in redux planted in react app\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n    switch (action.type) {\r\n\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, leaders: [] };\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errMess: action.payload, leaders: [] };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n} \r\n","import * as ActionTypes  from './actionTypes';\r\n\r\n//promo reducer \r\nexport const Promotions = ( state = {\r\n    isLoading : true ,\r\n    errMess: null,\r\n    promotions: []\r\n}, action)=>{\r\n    switch(action.type){\r\n        case ActionTypes.ADD_PROMOS:\r\n            return { ...state, isLoading: false, errMess: null, promotions: action.payload};   \r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return { ...state, isLoading: true, errMess: null, promotions: []};\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state\r\n    }\r\n} \r\n","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react'\r\nimport Main from './components/MainComponent';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\n\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <div className=\"App\">\r\n            <Main />\r\n          </div>\r\n        </BrowserRouter>\r\n      </Provider>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport { Comments } from './comments';\r\nimport { Dishes } from './dishes';\r\nimport { Leaders } from './leaders';\r\nimport { Promotions } from './promotions';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n\r\n  //const store = createStore( Reducer, initialState);\r\n  const store = createStore(\r\n    combineReducers({\r\n       dishes: Dishes,\r\n       leaders: Leaders,\r\n       promotions: Promotions,\r\n       comments: Comments,\r\n       ...createForms({feedback: InitialFeedback})\r\n    }),\r\n    applyMiddleware(thunk, logger)\r\n  );\r\n  \r\n  return store;\r\n}; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}